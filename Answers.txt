# final project
# -------------

Question 1:
kubectl run nginx-pod --image=nginx:alpine

Question 2:
kubectl run messaging --image=redis:alpine -l "tier=msg"

Question 3:
kubectl create ns apx-x998-liran

Question 4:
kubectl get nodes -o json >> /tmp/liran

Question 5:
kubectl expose pod messaging --port=6379 --name messaging-service

Question 6:
6.yaml

Question 7:
kubectl create deploy hr-web-app --image kodekloud/webapp-color && kubectl scale deploy hr-web-app --replicas 2
  
Question 8:
vi /etc/kubernetes/manifests/static-busybox.yaml
file: 8.yaml
for test: systemctl restart kubelet

Question 9:
kubectl create ns finance-liran
kubectl run -n finance-liran temp-bus --image redis:alpine

Question 10:
kubectl apply -f 10.yaml
file: 10.yaml

Question 11:
kubectl apply -f 11.yaml
file: 11.yaml

Question 12:
kubectl apply -f pv-1.yaml
kubectl apply -f 12.yaml
file: 12.yaml

Question 13:
kubectl create deploy nginx-deploy --image nginx:1.16
kubectl annotate deployment/nginx-deploy kubernetes.io/change-cause="install nginx 1.16"
kubectl set image deployment/nginx-deploy nginx=nginx:1.17
kubectl annotate deployment/nginx-deploy kubernetes.io/change-cause="update nginx 1.17"
kubectl rollout history deployment

Question 14:
file: 14.yaml
kubectl run --image nginx nginx-resolver --labels=app=nginx-resolver
kubectl apply -f 14.yaml
kubectl run --restart=Never --image busybox:1.28 dns -- sleep 1000
kubectl exec -it dns -- nslookup $(kubectl get svc nginx-resolver-service -o=jsonpath='{.spec.clusterIP}') > /root/liran.svc
kubectl exec -it dns -- nslookup $(kubectl get pods nginx-resolver -o=jsonpath='{.status.podIP}') > /root/liran.pod

Question 15:
file: 15.yaml
kubectl apply -f 15.yaml
kubectl delete pods

Question 16:
kubectl apply -f 16.yaml
file: 16.yaml

Pod Design Questions:
*********************
1. kubectl get pods --show-labels

2. kubectl run nginx --image=nginx -l "env=prod"
	files: poddesign2.yaml, poddesign3.yaml

3. kubectl get pods --selector=env --show-labels	
 
4. kubectl get pods --selector=env=dev

5. kubectl get pods --selector=env=dev --show-labels

6. kubectl get pods --selector=env=prod

7. kubectl get pods --selector=env=prod --show-labels

8. kubectl get pods --selector=env

9. kubectl get pods --selector=env --show-labels

10. kubectl get pods -l 'env in (dev,prod)' --show-labels

11. kubectl label pods nginx-rs-dev-7mnzc env=uat --overwrite
    kubectl get pods --selector=env --show-labels
	
12. kubectl label pods -l env env-
	kubectl get pods --show-labels
	
13. kubectl label pods --all app=nginx

14. kubectl get nodes --show-labels

15. kubectl label node worker nodeName=nginxnode

16. file: 16-pod.yaml

17. kubectl get pods -o wide
 
18. kubectl get pods --show-labels

Deployments:
*************

1. i. kubectl create deploy webapp --image=nginx --dry-run=client -o yaml > webapp.yaml
   ii. file: webapp.yaml

2. kubectl rollout status deployment.apps/webapp

3. kubectl get rs

4. kubectl get deploy webapp -o yaml > webappexport.yaml

5. kubectl delete deploy webapp

6. a. kubectl create deploy webapp --image=nginx:1.17.1 --dry-run=client -o yaml > webapp.yaml
   b. file: 6-1.yaml
	
7. kubectl describe deployment webapp

8. kubectl rollout history deploy

9. kubectl rollout undo deployment webapp --to-revision 1
   kubectl describe deployment webapp
   
10. a. kubectl deploy -f 1100.yaml
		kubectl get pods 
	b. kubectl rollout undo deployment webapp --to-revision 3
	c. there is no revision 7, i rolled out to 3 and it's fine.
	e. microk8s kubectl apply -f 10-latest.yaml
	
11. kubectl autoscale deployment webapp --cpu-percent=85 --min=10 --max=20

13. kubectl delete all --all --force --grace-period=0

14. kubectl create job hello-job --image=busybox --dry-run=client -o yaml -- echo "Hello I am from job" > hello-job.yaml
    a. file: hello-job.yaml
	
	
Config MAP:
*************
1. cat >> config.txt << EOF
		key1=value1
		key2=value2
		EOF
		cat config.txt
2. cat config.txt

3. kubectl run nginx --image=nginx --restart=Never --dry-run=client -o yaml > nginx-pod.yml
   







